<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Index on Ashita v4 Documentation</title><link>http://docs.ashitaxi.com/</link><description>Recent content in Index on Ashita v4 Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://docs.ashitaxi.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Configurations</title><link>http://docs.ashitaxi.com/usage/configurations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.ashitaxi.com/usage/configurations/</guid><description>This page is subject to change heavily in the future when Ashita v4 gains its full UI launcher.
Once you have downloaded and extracted/installed Ashita, you are ready to begin configurations.
Configuration File Locations Ashita includes its own built-in ConfigurationManager object which makes use of .ini files. To help keep things organized, all configuration files that make use of this system are stored in a central location, the /config/ folder.</description></item><item><title>System Requirements</title><link>http://docs.ashitaxi.com/installation/requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.ashitaxi.com/installation/requirements/</guid><description>In order to make use of Ashita, there are some requirements you will need to install. While some of these are optional, it is suggested to install everything listed on this page to ensure anything you may use with Ashita, or additional third-party tooling, works without dependency issues.
Supported Operating Systems Ashita supports the following operating systems:
Windows 7 (Must install latest service packs.) Windows 8, Windows 8.1 Windows 10 Windows 11 While Ashita may work on other operating systems not listed above, we do not give any kind of direct support for them!</description></item><item><title>[Beta] Install via Git</title><link>http://docs.ashitaxi.com/installation/install_git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.ashitaxi.com/installation/install_git/</guid><description>Installing and updating the Ashita v4 beta using Git is considered more advanced. If you are not familiar with or comfortable with using Git, you can instead install (or update) using the latest repository snapshot.
See Install via Zip for more information.
Currently, the recommended method of installing the Ashita v4 beta is by using a Git client. At this time, the latest beta release is maintained in a single GitHub repository which makes it easy to find the main project files and first-party addons/plugins in one place.</description></item><item><title>[Beta] Running Ashita</title><link>http://docs.ashitaxi.com/usage/running/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.ashitaxi.com/usage/running/</guid><description>We currently do not have a graphical user interface made for launching Ashita v4 during the beta. This documentation covers using the ashita-cli.exe launcher until a full UI launcher is ready.
Before you attempt to launch/run Ashita v4, please be sure to create a new boot configuration file with your desired configurations. You can find more information in regards to configurations here: Configurations
Once you have setup a new boot configuration file, you are ready to launch Ashita.</description></item><item><title>[Beta] Install via Zip</title><link>http://docs.ashitaxi.com/installation/install_zip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.ashitaxi.com/installation/install_zip/</guid><description>It is recommended that you use Git to install the Ashita v4 beta for easy updating. See Install via Git if you are comfortable doing so.
Picking An Installation Folder When picking a folder to install Ashita to, it is important that you DO NOT break the following guidelines:
Ashita should NOT be installed into a system protected folder.
This means it should not be put into folders (or folders within) such as:</description></item><item><title>Commands</title><link>http://docs.ashitaxi.com/usage/commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.ashitaxi.com/usage/commands/</guid><description>Command Syntax Commands implemented within Ashita all follow the below format for their arguments. This helps keep usage unified across all commands. It also makes documentation easier to follow when all commands make use of the same format.
Syntax Description text Required; entered as shown. &amp;lt;text&amp;gt; Required argument. &amp;lt;text...&amp;gt; Required argument. (Multiple arguments accepted.) (text|text) Required, one of. [text] Optional argument. [text...] Optional argument. (Multiple arguments accepted.) Note: Arguments surrounded with &amp;lt; and &amp;gt; are considered positional, meaning their order matters.</description></item><item><title>Text Scripts</title><link>http://docs.ashitaxi.com/usage/scripts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.ashitaxi.com/usage/scripts/</guid><description>One of Ashita&amp;rsquo;s built-in features is the ability to execute text-based scripts which can contain additional commands to be executed within them. Scripts were originally created to vastly improve on the games extremely limited macro system (PS2 limitations!) by allowing players to execute more than six command entries, having multiple waits, and doing more than just normal game related functions.
As the client has gained new features (ie. gear sets, more macro space via books, etc.</description></item><item><title>Credits</title><link>http://docs.ashitaxi.com/credits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.ashitaxi.com/credits/</guid><description>Ashita is developed with &amp;#x2764;&amp;#xfe0f; by its core development team, and greatly enhanced by its various plugin and addon developers.
Below are lists of credits and shoutouts to the various people who have brought Ashita to life and continue its development.
Tooling Ashita is developed using the following tooling:
Visual Studio 2022 Visual Studio Code Insiders GitHub The following extensions are used with Visual Studio Code:
C/C++ (Microsoft) CMake (twxs) CMake Tools (Microsoft) Even Better TOML (tamasfe) Instant Markdown (David Bankier) Lipsum Generator (Nino Maruszewski) Lua (sumneko) Lua Debug (actboy168) Third-Party Libraries Ashita is developed using the following thirdparty libraries:</description></item></channel></rss>